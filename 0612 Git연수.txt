Git - 분산형 버전관리시스템
- 파일변경이력을 담는 시스템

GitHub - 소스코드를 보존, 공유가능 , Git을 이용한 웹서비스의 명칭

Git 
- 최신데이터를 이해하기 쉽게 관리 가능
- 변경이력이 남음
- 마이너스가 없어진코드, 플러스가 새로 생긴 코드를 의미
- 복수인가 동시에 개발이 가능하다.
- 곤니치와를 두명이서 앞에는 오하요, 뒤에는 사요나라를 붙여 수정한 경우 최종에 오하요 곤니치와 사요나라가 붙어서 저장됨
	동시에 작업시 기존의 데이터는 변경하지 못하도록 하고 추가 함수가 붙을 경우 동시추가.
- 푸루리퀘스트
- 서버리포지토리 > 클라이언트리포지토리 > 파일시스템에 클론됨
- 파일시스템에 클론된 데이터를 수정하고 Commit(세이브) 하면 리포지토리에 저장, 서버의 리포지토리에 다시 Push(저장),
	서버리포지토리에 저장되면 모두가 볼 수 있는 상황이 됨
- 다른 PC에 접속할 때도 SSH 필요 - SSH키는 키를 이용해서 패스워드없이 접속하는 기능
ssh-keygen - 엔터세번 - cd .ssh - ls - dir
김기원폴더 SSD - id_rsa기 비밀키, id_rsa.pub가 공개키
공개키를 깃허브에 등록하면 패스워드 없이 로그인가능
깃허브 아이디 김기원12!

소스트리 - 툴 - 옵션 - SSH키에서 비밀키 지정 - 확인

액세스토큰지정
깃허브 세팅 - 디벨로퍼세팅 - 퍼스널엑세스토큰즈 - 토큰즈(클래식) - 제너레이트뉴토큰

깃허브 레포지토리 추가 : 깃허브 - Your Repository 이름지정 후 Readme체크 (서버리포지토리추가한것임)

용어
리포지토리 , 서버리포지토리
클론 - 서버에 있는 것을 로컬으로 처음에 구축하는것
풀 - 최신 데이터를 취득해서 가져오는것
커밋토 - 로컬리포지토리에 갱신을 보존하는것
푸쉬 - 리모트 리포지토리에 로컬리포지토리의 갱신을 반영하는 것

풀 -개발-인덱스에스테이지-로컬리포지토리에풀-리모트에푸쉬 단계로 개발함.
휏치 : 최신정보가 있는지 없는지 확인, 보통 사용하지 않고 바로 풀 함.

브란치

GITIGNORE을 열어서 매크로파일형식이 있으면 업로드가 안 될 경우가 있다.